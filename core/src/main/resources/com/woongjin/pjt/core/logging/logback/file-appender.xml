<?xml version="1.0" encoding="UTF-8" ?>
<!-- ${FILE_LOG_PATTERN} 과 같은 System Property 는 yaml 파일에 설정한 Spring Environment 에 지정한 설정 값을 가져온다.-->
<included>
    <!-- File Appender -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern> <!-- yaml 파일 logging.pattern.file -->
            <charset>${FILE_LOG_CHARSET}</charset> <!-- yaml 파일 logging.charset.file -->
        </encoder>
        <file>${LOG_PATH}${LOG_FILE}.log</file> <!-- yaml 파일 logging.file.name + logging.file.path -->
        <!-- SizeAndTimeBasedRollingPolicy : 로그 파일에 대한 시간 및 크기에 제한 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}${LOG_FILE}.log.${LOGBACK_ROLLINGPOLICY_FILE_NAME_PATTERN}</fileNamePattern>
            <maxFileSize>${LOGBACK_ROLLINGPOLICY_MAX_FILE_SIZE:-10MB}</maxFileSize>        <!-- 한 파일 당 최대 파일 용량 지정 -->
            <totalSizeCap>${LOGBACK_ROLLINGPOLICY_TOTAL_SIZE_CAP:-0}</totalSizeCap>        <!-- 아카이브한 로그 파일의 최대 사이즈 정의 -->
            <maxHistory>${LOGBACK_ROLLINGPOLICY_MAX_HISTORY:-30}</maxHistory>             <!-- 최대 파일 생성 갯 수 -->
        </rollingPolicy>
    </appender>

    <!-- Error File Appender -->
    <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">  <!--LevelFilter 정의 -->
            <level>ERROR</level>              <!-- 필터링할 로그 레벨을 ERROR 로 지정 ERROR 로그 메시지만 허용 -->
            <onMatch>ACCEPT</onMatch>       <!-- 로그 메시지가 ERROR 레벨과 일치할 때 로그 메시지를 허용 -->
            <onMismatch>DENY</onMismatch>   <!-- 로그 메시지가 ERROR 레벨과 일치하지 않을 때 로그 메시지를 거부-->
        </filter>
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern> <!-- yaml 파일 logging.pattern.file -->
            <charset>${FILE_LOG_CHARSET}</charset> <!-- yaml 파일 logging.charset.file -->
        </encoder>
        <file>${LOG_PATH}${LOG_FILE}-error.log</file> <!-- yaml 파일 logging.file.name + logging.file.path -->
        <!-- SizeAndTimeBasedRollingPolicy : 로그 파일에 대한 시간 및 크기에 제한 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}${LOG_FILE}-error.log.${LOGBACK_ROLLINGPOLICY_FILE_NAME_PATTERN}</fileNamePattern>
            <maxFileSize>${LOGBACK_ROLLINGPOLICY_MAX_FILE_SIZE:-10MB}</maxFileSize>        <!-- 한 파일 당 최대 파일 용량 지정 -->
            <totalSizeCap>${LOGBACK_ROLLINGPOLICY_TOTAL_SIZE_CAP:-0}</totalSizeCap>        <!-- 아카이브한 로그 파일의 최대 사이즈 정의 -->
            <maxHistory>${LOGBACK_ROLLINGPOLICY_MAX_HISTORY:-30}</maxHistory>             <!-- 최대 파일 생성 갯 수 -->
        </rollingPolicy>
    </appender>
</included>